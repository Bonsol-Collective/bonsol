import * as flatbuffers from 'flatbuffers';
import { ExecutionInputType } from '../bonsol/execution-input-type.js';
export declare class ExecutionRequestV1 {
    bb: flatbuffers.ByteBuffer | null;
    bb_pos: number;
    __init(i: number, bb: flatbuffers.ByteBuffer): ExecutionRequestV1;
    static getRootAsExecutionRequestV1(bb: flatbuffers.ByteBuffer, obj?: ExecutionRequestV1): ExecutionRequestV1;
    static getSizePrefixedRootAsExecutionRequestV1(bb: flatbuffers.ByteBuffer, obj?: ExecutionRequestV1): ExecutionRequestV1;
    executionId(index: number): number | null;
    executionIdLength(): number;
    executionIdArray(): Uint8Array | null;
    imageId(index: number): number | null;
    imageIdLength(): number;
    imageIdArray(): Uint8Array | null;
    callbackProgramId(index: number): number | null;
    callbackProgramIdLength(): number;
    callbackProgramIdArray(): Uint8Array | null;
    callbackInstructionPrefix(index: number): number | null;
    callbackInstructionPrefixLength(): number;
    callbackInstructionPrefixArray(): Uint8Array | null;
    inputType(): ExecutionInputType;
    mutate_input_type(value: ExecutionInputType): boolean;
    inputData(index: number): number | null;
    inputDataLength(): number;
    inputDataArray(): Uint8Array | null;
    static startExecutionRequestV1(builder: flatbuffers.Builder): void;
    static addExecutionId(builder: flatbuffers.Builder, executionIdOffset: flatbuffers.Offset): void;
    static createExecutionIdVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startExecutionIdVector(builder: flatbuffers.Builder, numElems: number): void;
    static addImageId(builder: flatbuffers.Builder, imageIdOffset: flatbuffers.Offset): void;
    static createImageIdVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startImageIdVector(builder: flatbuffers.Builder, numElems: number): void;
    static addCallbackProgramId(builder: flatbuffers.Builder, callbackProgramIdOffset: flatbuffers.Offset): void;
    static createCallbackProgramIdVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startCallbackProgramIdVector(builder: flatbuffers.Builder, numElems: number): void;
    static addCallbackInstructionPrefix(builder: flatbuffers.Builder, callbackInstructionPrefixOffset: flatbuffers.Offset): void;
    static createCallbackInstructionPrefixVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startCallbackInstructionPrefixVector(builder: flatbuffers.Builder, numElems: number): void;
    static addInputType(builder: flatbuffers.Builder, inputType: ExecutionInputType): void;
    static addInputData(builder: flatbuffers.Builder, inputDataOffset: flatbuffers.Offset): void;
    static createInputDataVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startInputDataVector(builder: flatbuffers.Builder, numElems: number): void;
    static endExecutionRequestV1(builder: flatbuffers.Builder): flatbuffers.Offset;
    static createExecutionRequestV1(builder: flatbuffers.Builder, executionIdOffset: flatbuffers.Offset, imageIdOffset: flatbuffers.Offset, callbackProgramIdOffset: flatbuffers.Offset, callbackInstructionPrefixOffset: flatbuffers.Offset, inputType: ExecutionInputType, inputDataOffset: flatbuffers.Offset): flatbuffers.Offset;
}
