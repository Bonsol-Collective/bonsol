// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ChannelInstructionData, unionToChannelInstructionData, unionListToChannelInstructionData } from './channel-instruction-data.js';


export class ChannelInstruction {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ChannelInstruction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsChannelInstruction(bb:flatbuffers.ByteBuffer, obj?:ChannelInstruction):ChannelInstruction {
  return (obj || new ChannelInstruction()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsChannelInstruction(bb:flatbuffers.ByteBuffer, obj?:ChannelInstruction):ChannelInstruction {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ChannelInstruction()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

instructionType():ChannelInstructionData {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ChannelInstructionData.NONE;
}

instruction<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startChannelInstruction(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addInstructionType(builder:flatbuffers.Builder, instructionType:ChannelInstructionData) {
  builder.addFieldInt8(0, instructionType, ChannelInstructionData.NONE);
}

static addInstruction(builder:flatbuffers.Builder, instructionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, instructionOffset, 0);
}

static endChannelInstruction(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishChannelInstructionBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedChannelInstructionBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createChannelInstruction(builder:flatbuffers.Builder, instructionType:ChannelInstructionData, instructionOffset:flatbuffers.Offset):flatbuffers.Offset {
  ChannelInstruction.startChannelInstruction(builder);
  ChannelInstruction.addInstructionType(builder, instructionType);
  ChannelInstruction.addInstruction(builder, instructionOffset);
  return ChannelInstruction.endChannelInstruction(builder);
}
}
