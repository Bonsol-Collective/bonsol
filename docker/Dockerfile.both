ARG RUST_VERSION=1.81.0
ARG FLAT_BUFFERS_VERSION=24.3.25
ARG CUDA_VERSION=12.5

######################################################################
# Cargo chef container 
######################################################################

FROM rust:${RUST_VERSION} as chef

SHELL ["/bin/bash", "-c"]

RUN set -euxo pipefail \
&&  cargo install cargo-chef


######################################################################
# Cargo chef prepare
######################################################################

FROM chef as planner

WORKDIR /app

COPY . .

SHELL ["/bin/bash", "-c"]

RUN set -euxo pipefail \
&&  cargo chef prepare --bin bonsol-node --recipe-path recipe.json


######################################################################
# Build bonsol node common build environment
######################################################################

FROM chef as builder-base

ARG FLAT_BUFFERS_VERSION

WORKDIR /app/

COPY . . 

SHELL ["/bin/bash", "-c"]

RUN set -euxo pipefail \
&&  apt-get update --fix-missing \
&&  apt-get install -y --no-install-recommends \
      pkg-config \
      libssl-dev \
      software-properties-common \
      build-essential \
      cmake \
&&  git clone -b v${FLAT_BUFFERS_VERSION} https://github.com/google/flatbuffers.git \
&&  cd flatbuffers \
&&  cmake -G "Unix Makefiles" \
&&  make install \
&&  cargo install sccache --locked \
&&  apt-get clean \
&&  rm -rf /var/lib/apt/lists/*

######################################################################
# Build bonsol node cpu version
######################################################################

FROM builder-base as bonsol-node-cpu

WORKDIR /app/

RUN set -euxo pipefail \
&&  cargo chef cook --bin bonsol-node --release --recipe-path recipe.json \
&&  cargo build --release 

###################################################################### 
# Build bonsol node gpu version
######################################################################

FROM builder-base as bonsol-node-gpu

ARG RUST_VERSION
ARG FLAT_BUFFERS_VERSION
ARG CUDA_VERSION

WORKDIR /app/

SHELL ["/bin/bash", "-c"]

RUN set -euxo pipefail \
&&  wget https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/cuda-keyring_1.1-1_all.deb \
&&  dpkg -i cuda-keyring_1.1-1_all.deb \
&&  add-apt-repository contrib \
&&  apt-get update \
&&  apt-get -y install cuda-toolkit-${CUDA_VERSION} \
&&  export PATH=/usr/local/cuda-${CUDA_VERSION}/bin${PATH:+:${PATH}} \
&&  cargo chef cook --bin bonsol-node --features=cuda --release --recipe-path recipe.json \
&&  cargo build -p bonsol-node --features=cuda --release \
&&  apt-get clean \
&&  rm -rf /var/lib/apt/lists/*


######################################################################
# Create an optimized container with Bonsol node
######################################################################

FROM rust:${RUST_VERSION}-slim

ARG CUDA_VERSION

LABEL org.opencontainers.image.source=https://github.com/bonsolcollective/bonsol
LABEL org.opencontainers.image.title="bonsol-node"
LABEL org.opencontainers.image.description="A bonsol proving node"

WORKDIR /usr/opt/bonsol

COPY --from=bonsol-node-cpu /app/target/release/bonsol-node /usr/opt/bonsol/bonsol-cpu
COPY --from=bonsol-node-gpu /app/target/release/bonsol-node /usr/opt/bonsol/bonsol-gpu
COPY --from=risczero/risc0-groth16-prover:v2024-05-17.1 /app/stark_verify /usr/opt/bonsol/stark/stark_verify
COPY --from=risczero/risc0-groth16-prover:v2024-05-17.1 /app/stark_verify.dat /usr/opt/bonsol/stark/stark_verify.dat
COPY --from=risczero/risc0-groth16-prover:v2024-05-17.1 /app/stark_verify_final.zkey /usr/opt/bonsol/stark/stark_verify_final.zkey
COPY --from=risczero/risc0-groth16-prover:v2024-05-17.1 /usr/local/sbin/rapidsnark /usr/opt/bonsol/stark/rapidsnark
COPY docker/bonsol-node.sh /usr/opt/bonsol/bonsol-node.sh

SHELL ["/bin/bash", "-c"]

RUN set -euxo pipefail \
&&  mkdir -p /usr/opt/bonsol/stark \
&&  apt-get update \
&&  apt-get install -y --no-install-recommends \
      software-properties-common \
      wget \
      ca-certificates \
      libgmp-dev \
      libsodium-dev \
      nasm \
      m4 \
#&&  wget https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/cuda-keyring_1.1-1_all.deb \
#&&  dpkg -i cuda-keyring_1.1-1_all.deb \
#&&  rm cuda-keyring_1.1-1_all.deb \
#&&  add-apt-repository contrib \
#&&  apt-get update \
#&&  apt-get -y install cuda-toolkit-${CUDA_VERSION} \
&&  apt-get clean \
&&  rm -rf /var/lib/apt/lists/* 


EXPOSE 9000

ENTRYPOINT ["/usr/opt/bonsol/bonsol-node.sh"]

