# Stage 1: flatc build

FROM debian:stable-slim AS flatc-build

ARG FLATC_VERSION=24.3.25

WORKDIR /flatbuffers/flatbuffers-${FLATC_VERSION}

RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update \
&&  apt-get install -y -q --no-install-recommends \
      build-essential \
      cmake \
      ca-certificates \
      curl \
      git \
      gnupg2 \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# flatc

ADD https://github.com/google/flatbuffers/archive/refs/tags/v${FLATC_VERSION}.tar.gz v${FLATC_VERSION}.tar.gz

RUN tar -zxvf v${FLATC_VERSION}.tar.gz || { echo "Failed to extract tarball"; exit 1; } \
&&  cmake -G "Unix Makefiles" \
&&  make -j \
&&  make install \
&&  strip /usr/local/bin/flatc


# Stage 2: Bonsol Test

FROM ghcr.io/anagrambuild/risczero:v1.0.3_2

LABEL \
    org.opencontainers.image.name="bonsol-ci-env" \
    org.opencontainers.image.description="Bonsol CI Build Environment" \
    org.opencontainers.image.url="ghcr.io/bonsol-collective/bonsol-ci-env" \
    org.opencontainers.image.source="https://github.com/bonsol-collective/bonsol.git" \
    org.opencontainers.image.vendor="anagram.xyz" \
    org.opencontainers.image.created=$(date --rfc-3339=seconds) \
    org.opencontainers.image.licenses="GNU-Affero" \
    org.opencontainers.image.authors="Anagram Build <build@anagram.xyz>"

USER root

ARG PACKAGE=bonsol
ARG SOLANA=1.18.22
ARG RUST_VERSION=1.81.0

WORKDIR /workspaces/${PACKAGE}

ENV USER=solana
ENV CARGO_HOME=/usr/local/cargo
ENV RUSTUP_HOME=/usr/local/rustup
ENV PATH=${PATH}:/usr/local/cargo/bin:/go/bin:/home/${USER}/.local/share/solana/install/releases/${SOLANA}/bin

# flatbuffers
COPY --from=flatc-build /usr/local/bin/flatc /usr/local/bin/flatc
COPY --from=flatc-build /usr/local/include/flatbuffers /usr/local/include/flatbuffers
COPY --from=flatc-build /usr/local/lib/libflatbuffers.a /usr/local/lib/libflatbuffers.a
COPY --from=flatc-build /usr/local/lib/cmake/flatbuffers /usr/local/lib/cmake/flatbuffers
COPY --from=flatc-build /usr/local/lib/pkgconfig/flatbuffers.pc /usr/local/lib/pkgconfig/flatbuffers.pc

# Set working directory
# Install Rust components
RUN apt-get update \
&&  apt-get install -y -q --no-install-recommends  \
      ca-certificates \
      bzip2 \
      nodejs \
      zstd \
      libgmp-dev \
      libsodium-dev \
      nasm \
      m4 \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN rustup component add \
    clippy
&&  rustup toolchain install nightly \
&&  rustup component add rustfmt --toolchain nightly \
&&  rustup toolchain install ${RUST_VERSION} \
&&  rustup default ${RUST_VERSION} \
&&  cargo install sccache --locked

COPY ci-entry.sh /usr/local/bin/ci-entry.sh

ENTRYPOINT ["/usr/local/bin/ci-entry.sh"]
